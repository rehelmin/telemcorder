/* 
 * ============================================================================
 * AUTO-GENERATED PARAMETER DICTIONARY
 * ============================================================================
 * Source File: param_defs.toml
 * Total Parameters: 2
 * Generated: Unknown time
 * 
 * DO NOT EDIT THIS FILE MANUALLY - IT WILL BE OVERWRITTEN
 * ============================================================================
 */

#ifndef __PARAM_DICT_H
#define __PARAM_DICT_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include "param.h"

// Parameter entry structure
typedef struct {
    uint16_t param_id;
    const char *name;
    union param_value_u value;
    uint8_t type; // 0=int32, 1=float, 2=pointer
} param_entry_t;

/*
 * PARAMETER STATISTICS:
 * - Integer parameters: 2
 * - Float parameters: 0
 * - Pointer/String parameters: 0
 */

// Parameter array index enumeration (for direct array access)
typedef enum {
    SYSTEM_VERSION = 0,
    STREAM_BLOCK_SIZE = 1,
} param_index_t;

// Generated parameter dictionary - SORTED BY param_id for binary search
static const param_entry_t param_dict[] = {
    /* [0] 0x0001: system_version (int32) */
    {0x0001, "system_version", {.i = 0}, 0},
    /* [1] 0x0002: stream_block_size (int32) */
    {0x0002, "stream_block_size", {.i = 100}, 0},
};

#define PARAM_COUNT (sizeof(param_dict) / sizeof(param_entry_t))


#ifdef __cplusplus
}
#endif

#endif /* __PARAM_DICT_H */